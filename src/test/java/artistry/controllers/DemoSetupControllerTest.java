/** This class was generated by GenTest@Mobacar */
package artistry.controllers;

import artistry.enums.DocumentStatus;
import artistry.enums.EpicType;
import artistry.enums.License;
import artistry.enums.Role;
import artistry.models.*;
import artistry.repositories.*;
import java.math.BigDecimal;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.charset.*;
import java.util.*;
import java.util.concurrent.atomic.AtomicReference;
import org.apache.commons.io.*;
import org.json.*;
import org.junit.*;
import org.junit.runner.RunWith;
import org.mockito.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Description;
import org.springframework.http.MediaType;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MvcResult;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import static org.mockito.Matchers.any;
import static org.mockito.Matchers.anyString;
import static org.mockito.Matchers.endsWith;
import static org.mockito.Matchers.eq;
import static org.mockito.Mockito.doAnswer;
import static org.mockito.Mockito.doThrow;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.never;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;
import utils.*;

@RunWith(SpringRunner.class)
@SpringBootTest
@ActiveProfiles("test")
@ContextConfiguration(classes = DemoSetupController.class)
public class DemoSetupControllerTest {

	@Autowired
	private DemoSetupController underTest;

	@MockBean
	private CapabilityRepository capRepo;

	@MockBean
	private CompanyRepository coRepo;

	@MockBean
	private CountryRepository countryRepo;

	@MockBean
	private DocumentRepository docRepo;

	@MockBean
	private DevelopmentValueStreamRepository dsRepo;

	@MockBean
	private EnterpriseRepository enterpriseRepo;

	@MockBean
	private EpicRepository epicRepo;

	@MockBean
	private FeatureRepository featureRepo;

	@MockBean
	private InspectAndAdaptRepository iaRepo;

	@MockBean
	private KpiRepository kpiRepo;

	@MockBean
	private LargeSolutionRepository largeSolutionRepo;

	@MockBean
	private NonFunctionalRequirementRepository nfrRepo;

	@MockBean
	private OperationalValueStreamRepository opRepo;

	@MockBean
	private ProgramBacklogRepository pbRepo;

	@MockBean
	private PersonRepository personRepo;

	@MockBean
	private ProgramKanbanRepository pkRepo;

	@MockBean
	private PortfolioRepository portfolioRepo;

	@MockBean
	private PrincipalRoleRepository principalRoleRepo;

	@MockBean
	private ProgramRepository programRepo;

	@MockBean
	private RequirementRepository requirementRepo;

	@MockBean
	private RolesRepository rolesRepo;

	@MockBean
	private SystemDemoRepository sdRepo;

	@MockBean
	private SolutionBacklogRepository solutionBacklogRepo;

	@MockBean
	private ImplementationTeamRepository teamRepo;

	@MockBean
	private TrainRepository trainRepo;

	@MockBean
	private ValueStreamRepository vsRepo;

	private MockMvc mockMvc;

	@Before
	public void setupTest() {
		// prepare test
		this.mockMvc = MockMvcBuilders.standaloneSetup(underTest).build();
	}


	@Test
	public void testGenerateDemo_MVC_get() throws Exception {
		// given
		// when
		mockMvc.perform(get("/demo/generatedemo")
				.accept("application/json;charset=UTF-8"))
				.andExpect(status().isOk())
				;
		// then
		// TODO add meaningful assert or verify(mock).method();
	}

	@Test
	public void testGenerateDemo() throws Exception {
		// given
		// when
		underTest.generateDemo();
		// then
		// TODO add meaningful assert or verify(mock).method();
	}

}
